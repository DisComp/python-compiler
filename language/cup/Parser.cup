package com.language.parser;

import java.util.*;
import java_cup.runtime.*;
import com.language.model.expression.*;
import com.language.exceptions.*;

terminal PLUS, MINUS;
terminal TIMES, DIV;
terminal LPAREN, RPAREN;
terminal LBRACKET, RBRACKET;

terminal String ID;
terminal String INTEGER;
terminal String DECIMAL;
terminal String STRING;
terminal String TRUE;
terminal String FALSE;

terminal String ASSIGN;

non terminal Expression expr;

precedence left PLUS, MINUS;
precedence left TIMES, DIV;
precedence left ASSIGN;

expr  ::= INTEGER:i
			{:
				RESULT = new Expression(i);
			:}

		| DECIMAL:d
			{:
				RESULT = new Expression(d);
			:}

		| STRING:s
			{:
				RESULT = new Expression(s);
			:}

		| expr:l PLUS expr:r
			{:
				RESULT = new Expression("+", l, r);
			:}

		| expr:l MINUS expr:r
			{:
				RESULT = new Expression("-", l, r);
			:}

		| expr:l TIMES expr:r
			{:
				RESULT = new Expression("*", l, r);
			:}

		| expr:l DIV expr:r
			{:
				RESULT = new Expression("/", l, r);
			:}

		| ID:i
			{:
				RESULT = new Expression(i, null);
			:}

		| LPAREN expr:e RPAREN
			{:
				RESULT = e;
			:}
		
		| LBRACKET expr:e RBRACKET
			{:
				RESULT = e;
			:}
			
		| TRUE:t
			{:
				RESULT = new Expression(t);
			:}
			
		| FALSE:f
			{:
				RESULT = new Expression(f);
			:}
		
		| expr:l ASSIGN expr:r
			{:
				RESULT = new Expression("=", l, r);
			:}
		;
